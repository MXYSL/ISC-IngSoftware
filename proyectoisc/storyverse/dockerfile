# Usa la imagen oficial de PHP con Apache
FROM php:8.2-apache

# Instala dependencias del sistema
RUN apt-get update && apt-get install -y \
    default-mysql-client \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    nodejs \
    npm \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip

# Habilita mod_rewrite para Apache
RUN a2enmod rewrite

# Configura Apache con rewrite y configuración básica para Laravel
RUN echo '<VirtualHost *:80>\n\
    DocumentRoot /var/www/html/public\n\
    <Directory /var/www/html/public>\n\
        AllowOverride All\n\
        Require all granted\n\
    </Directory>\n\
</VirtualHost>' > /etc/apache2/sites-available/000-default.conf

# Configuración PHP embebida (equivalente a un php.ini personalizado)
RUN echo "memory_limit=512M\nupload_max_filesize=50M\npost_max_size=50M\nmax_execution_time=300" > /usr/local/etc/php/conf.d/custom.ini

# Configura el directorio de trabajo
WORKDIR /var/www/html

# Copia los archivos del proyecto
COPY . .

# Instala Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Instala dependencias de PHP (sin desarrollo, optimizado)
RUN composer install --no-dev --optimize-autoloader

# Instala dependencias de Node.js y construye assets
RUN npm install && npm run build

# Configura permisos necesarios para Laravel
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 755 /var/www/html/bootstrap/cache

# Expone el puerto 80
EXPOSE 80

# Usa el comando oficial para iniciar Apache en primer plano
CMD ["apache2-foreground"]
